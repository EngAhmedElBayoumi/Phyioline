"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-=t@kknd)1!i9x)si7l$)lxsxzp2g&vsohv+2jty#u4nm_7mxzw"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['phyzioline.coderash.online','127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'unfold',
    'django.contrib.admin',  # Ensure this is included
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'home',
    'account',
    'product',
    'ckeditor',
    "modeltranslation",
    "import_export",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",    
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                'django.template.context_processors.i18n',
                "product.context_process.cart_count",
            ],
        },
    },
]

WSGI_APPLICATION = "project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('DB_PORT', default='3306'),
    }
}




# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en"

LANGUAGES = [
    ('en', ('English')),
    ('ar', ('Arabic')),
]
    
MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'
MODELTRANSLATION_FALLBACK_LANGUAGES = ('en',)


TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# locale
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

STATIC_ROOT="/var/www/brmaja/static-root"

MEDIA_URL = '/media/'
MEDIA_ROOT = "/var/www/brmaja/media-root"



# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"



from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

UNFOLD = {
    "SITE_TITLE": "Phyionline Dashboard",
    "SITE_HEADER": "Phyionline Dashboard",
    "SITE_SUBHEADER": "Phyionline Dashboard",
    "SITE_URL": "/",
    "SITE_ICON": {
        "light": lambda request: static("assets/images/colored-logo.svg"),  # light mode
        "dark": lambda request: static("assets/images/main_logo_white.png"),  # dark mode
    },
    "SITE_LOGO": {
        "light": lambda request: static("assets/images/colored-logo.svg"),  # light mode 
        "dark": lambda request: static("assets/images/main_logo_white.png"),  # dark mode
    },
    "SITE_SYMBOL": "speed",  
    
    
    "SITE_FAVICONS": [
        {
            "rel": "icon",
            "sizes": "32x32",
            "type": "image/svg+xml",
            "href": lambda request: static("assets/images/colored-logo.svg"),
        },
    ],
    "SHOW_HISTORY": True, 
    "SHOW_VIEW_ON_SITE": True, 
    "SHOW_BACK_BUTTON": True, 
    "STYLES": [
        lambda request: static("admin/css/dashboard.css"),
        lambda request: static("admin/css/dashboard2.css"),
    ],
    "SCRIPTS": [
        lambda request: static("admin/js/dashboard.js"),
    ],  

"SHOW_LANGUAGES": True,
         
}



PAYMOB_API_KEY=config('PAYMOB_API_KEY')
PAYMOB_SECRET_KEY=config('PAYMOB_SECRET_KEY')
PAYMOB_PUBLIC_KEY=config('PAYMOB_PUBLIC_KEY')
PAYMOB_INTEGRATION_ID = config('PAYMOB_INTEGRATION_ID')

PAYMOB_INTEGRATION_CARD_ID=config('PAYMOB_INTEGRATION_CARD_ID')
PAYMOB_INTEGRATION_WALLET_ID=config('PAYMOB_INTEGRATION_WALLET_ID')
PAYMOB_INTEGRATION_KIOSK_ID=config('PAYMOB_INTEGRATION_KIOSK_ID')
PAYMOB_INTEGRATION_AGGREGATOR_ID=config('PAYMOB_INTEGRATION_AGGREGATOR_ID')
PAYMOB_INTEGRATION_CASH_ID=config('PAYMOB_INTEGRATION_CASH_ID')  

CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono',
        # 'skin': 'office2013',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            {'name': 'forms',
             'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
                       'HiddenField']},
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'insert',
             'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
            '/',
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'about', 'items': ['About']},
            '/',  # put this to force next toolbar on new line
            {'name': 'yourcustomtools', 'items': [
                # put the name of your editor.ui.addButton here
                'Preview',
                'Maximize',

            ]},
        ],
        
    }
}

AUTH_USER_MODEL = 'account.CustomUser'